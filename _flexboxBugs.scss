// PARTIAL FOR SOLVING FLEXBOX ISSUES
// by Juan Garnica

// bug safari's flexbox :  When flex items are too big to fit inside their container
// https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored
  @media (max-width: 600px){
    [class*='layout'] > *:not(.flex) {
      //-webkit-flex-shrink: 0;
      -webkit-flex-basis: auto;
    }
  }
.header-search-wrapper {
  min-height: 190px;
  height:auto;
  // .layout  > * {
  //   -webkit-flex-shrink: 0;
  // }
}
.outbound-flight-wrapper {
  -webkit-flex-basis: auto;
}
.prediction-wrapper,
.booking-info-wrapper {
  -webkit-flex-basis: 50% !important;
}

//bug on safari webviewer
.layout-fill {
  height: auto;
}

// IE 11 doesn't like .flex class
// so I need to use .flex-auto instead. But for which the layout-margin directive is not applied
// here I created a new rule for solving this
.layout-padding,
 .layout-padding > [class*="flex"] {
  padding: 8px;
}
.layout-margin {
  margin: initial;
}
 .layout-margin > [class*="flex"] {
    margin: 8px;
}

// .flex {
//     -webkit-flex: 1;
//     -ms-flex: 1;
//     flex: 1;
//     box-sizing: border-box;
// }
// .flex-auto {
//     -webkit-flex: 1 1 auto;
//     -ms-flex: 1 1 auto;
//     flex: 1 1 auto;
//     box-sizing: border-box;
// }
// .flex-grow {
//     -webkit-flex: 1 1 100%;
//     -ms-flex: 1 1 100%;
//     flex: 1 1 100%;
//     box-sizing: border-box;
// }
// .flex-initial {
//     -webkit-flex: 0 1 auto;
//     -ms-flex: 0 1 auto;
//     flex: 0 1 auto;
//     box-sizing: border-box;
// }
